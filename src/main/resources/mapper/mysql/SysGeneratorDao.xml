<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ourslook.guower.dao.SysGeneratorDao">
	<select id="queryList" resultType="map">
		<!--use information_schema;-->
		<!--select table_name tableName, engine, table_comment tableComment, create_time createTime, UPDATE_TIME updateTime from information_schema.tables where TABLE_SCHEMA like '%guower%';-->
		select table_name tableName, engine, table_comment tableComment, create_time createTime,UPDATE_TIME updateTime from information_schema.tables
			where table_schema = (select database()) 
		<if test="tableName != null and tableName.trim() != ''">
			and table_name like concat('%', #{tableName}, '%') 
		</if>
		<if test="tableComment != null and tableComment.trim() != ''">
			and table_comment like concat('%', #{tableComment}, '%')
		</if>
		<if test="createDate_BETWEEN != null and createDate_BETWEEN.trim() != ''">
			and `create_time`  BETWEEN #{createDate_BETWEEN_1start} AND #{createDate_BETWEEN_2end}
		</if>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				ORDER BY table_name DESC
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from information_schema.tables where table_schema = (select database())
		<if test="tableName != null and tableName.trim() != ''">
			and table_name like concat('%', #{tableName}, '%') 
		</if>
		<if test="tableComment != null and tableComment.trim() != ''">
			and table_comment like concat('%', #{tableComment}, '%')
		</if>
		<if test="createDate_BETWEEN != null and createDate_BETWEEN.trim() != ''">
			and `create_time`  BETWEEN #{createDate_BETWEEN_1start} AND #{createDate_BETWEEN_2end}
		</if>
		<if test="updateTime_BETWEEN != null and updateTime_BETWEEN.trim() != ''">
			and `UPDATE_TIME`  BETWEEN #{updateTime_BETWEEN_1start} AND #{updateTime_BETWEEN_2end}
		</if>
	</select> 
	
	<select id="queryTable" resultType="map">
		select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables 
			where table_schema = (select database()) and table_name = #{tableName}
	</select> 
	
	<select id="queryColumns" resultType="map">
		select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra, is_nullable, CHARACTER_MAXIMUM_LENGTH  from information_schema.columns
 			where table_name = #{tableName} and table_schema = (select database()) order by ordinal_position
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.dao.${className}Dao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="${package}.entity.${className}Entity" id="${classname}Map">
        #foreach($column in $columns)
            <result property="${column.attrname}" column="${column.columnName}"/>
        #end
    </resultMap>

    <select id="queryObject" resultType="${package}.entity.${className}Entity">
        SELECT *
        FROM ${tableName} where ${pk.columnName} = #{value}
    </select>

    <select id="queryList" resultType="${package}.entity.${className}Entity">
        select * from ${tableName}
        <where>
            <!-- mysql: columename1 = 1 和 columename1 = '1' 是一样，所以一般统一使用字符串类型 -->
            #foreach($column in $columns)
                #if($column.columnName == $pk.columnName)
                    <if test=" ${column.attrname}_IN != null ">
                        and `${column.columnName}` in
                        <foreach item="item" index="index" collection="${column.attrname}_IN" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                #else
                    #if($column.attrType == 'String')
                        <if test="${column.attrname} != null and ${column.attrname}.trim() != ''">
                            and `${column.columnName}` like concat('%',#{${column.attrname}},'%')
                        </if>
                    #elseif($column.attrType == 'Date' || $column.attrType == 'LocalDate' || $column.attrType == 'LocalDateTime' || $column.attrType == 'Clock')
                        <if test="${column.attrname}_BETWEEN != null and ${column.attrname}_BETWEEN.trim() != ''">
                            and `${column.columnName}` BETWEEN ${${column.attrname}_BETWEEN_1start} AND ${${column.attrname}_BETWEEN_2end}
                        </if>
                    #else
                        <if test="${column.attrname} != null and ${column.attrname}.trim() != ''">
                            and `${column.columnName}` = #{${column.attrname}}
                        </if>
                    #end
                #end
            #end
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by ${pk.columnName} desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from ${tableName}
        <where>
            #foreach($column in $columns)
                #if($column.columnName == $pk.columnName)
                    <if test=" ${column.attrname}_IN != null ">
                        and `${column.columnName}` in
                        <foreach item="item" index="index" collection="${column.attrname}_IN" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                #else
                    #if($column.attrType == 'String')
                        <if test="${column.attrname} != null and ${column.attrname}.trim() != ''">
                            and `${column.columnName}` like concat('%',#{${column.attrname}},'%')
                        </if>
                    #elseif($column.attrType == 'Date' || $column.attrType == 'LocalDate' || $column.attrType == 'LocalDateTime' || $column.attrType == 'Clock')
                        <if test="${column.attrname}_BETWEEN != null and ${column.attrname}_BETWEEN.trim() != ''">
                            and `${column.columnName}` BETWEEN ${${column.attrname}_BETWEEN_1start} AND ${${column.attrname}_BETWEEN_2end}
                        </if>
                    #else
                        <if test="${column.attrname} != null and ${column.attrname}.trim() != ''">
                            and `${column.columnName}` = #{${column.attrname}}
                        </if>
                    #end
                #end
            #end
        </where>
    </select>

    <insert id="save" parameterType="${package}.entity.${className}Entity"#if($pk.extra == 'auto_increment')
            useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
        INSERT INTO ${tableName}
            (
                #foreach($column in $columns)
                    #if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
                        $column.columnName #if($velocityCount != $columns.size()), #end

                    #end
                #end
            )
        VALUES
        (
            #foreach($column in $columns)
                #if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
                #{$column.attrname}#if($velocityCount != $columns.size()), #end

                #end
            #end
        )
    </insert>

    <update id="update" parameterType="${package}.entity.${className}Entity">
        update ${tableName}
        <set>
            #foreach($column in $columns)
                #if($column.columnName != $pk.columnName)
                    <if test="$column.attrname != null">
                        `$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()), #end</if>
                #end
            #end
        </set>
        where ${pk.columnName} = #{${pk.attrname}}
    </update>

    <delete id="delete">
        DELETE FROM ${tableName} where ${pk.columnName} = #{value}
    </delete>

    <delete id="deleteBatch">
        delete from ${tableName} where ${pk.columnName} in
        <foreach item="${pk.attrname}" collection="array" open="(" separator="," close=")">
            #{${pk.attrname}}
        </foreach>
    </delete>

</mapper>
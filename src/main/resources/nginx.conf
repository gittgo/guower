#user  nobody;
#user  root;
#指定nginx进程数
worker_processes auto;

worker_rlimit_nofile 8192;

#events {
#  worker_connections 8000;
#}

#指定nginx进程数
#worker_processes  1;

error_log  logs/error.log warn;

#pid        /var/run/nginx.pid;

events {
    # 连接数上限
    worker_connections  1024;
}


#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
    server_tokens off;

    include       mime.types;

    default_type  application/octet-stream;

    # 设置上传大小Sven  错误代码413
    client_max_body_size 200m;

    charset_types
    text/css
    text/plain
    text/vnd.wap.wml
    application/javascript
    application/json
    application/rss+xml
    application/xml;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log logs/access.log main;

    keepalive_timeout 20s;

    sendfile        on;

    tcp_nopush      on;

    gzip on;

    gzip_comp_level    5;

    gzip_min_length    256;

    gzip_proxied       any;

    gzip_vary          on;

    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    upstream my_oa_server {

        #为了防止多台服务器出现的session问题，开启ip_hash;一个客户端固定请求一个服务器；http://blog.csdn.net/xluren/article/details/16951247

       server 127.0.0.1:8080;
        #server 127.0.0.1:8280 ;
         #server 10.10.9.1:8780 ;

          keepalive 2000;
    }

    upstream my_portal_server {
        server 127.0.0.1:8080 ;
        keepalive 2000;
    }

    upstream my_sso_cas_server {
        server 127.0.0.1:8080 ;
         #server 10.10.9.1:9288;
        keepalive 2000;
    }

    upstream my_safety_server {
        server 127.0.0.1:8080 ;
        keepalive 2000;
    }

    upstream my_emergency_server {
            server 127.0.0.1:8080 ;
            keepalive 2000;
    }

    upstream my_production_server {
        server 127.0.0.1:8080 ;
        keepalive 2000;
    }



    upstream my_jenkins_server {
        server 127.0.0.1:8080 ;
        #server 10.10.9.1:9288 ;
        keepalive 2000;
    }
    server {
        listen       83;#在Linux中1024以下的端口号都需要root权限才能使用;http://blog.csdn.net/dia_vampire/article/details/42144693
        server_name localhost 115.236.15.162 10.10.9.9 zjcbl.com:82 www.zjcbl.com:82;#对于server_name,如果需要将多个域名的请求进行反向代理，可以配置多个server_name来满足要求
        #charset koi8-r;

        #重定向  http://www.sojson.com/blog/178.html
        if ($http_host ~ "^zjcbl.com:83$") {
            rewrite  ^(.*)    http://www.zjcbl.com:82$1 permanent;
        }
        gzip on;#该指令用于开启或关闭gzip模块(on/off)
        gzip_min_length 1100;#设置允许压缩的页面最小字节数，页面字节数从header头得content-length中进行获取。默认值是0，不管页面多大都压缩。建议设置成大于1k的字节数，小于1k可能会越压越大。
        gzip_buffers 4 8k;#//设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。4 16k代表以16k为单位，安装原始数据大小以16k为单位的4倍申请内存。
        gzip_types text/plain application/x-javascript text/css image;
        gzip_http_version 1.1; #//识别http的协议版本(1.0/1.1)
        #重定向END
        #access_log  logs/host.access.log  main;


        #错误代码 504  https://www.cnblogs.com/yezhaohui/p/4377662.html
        fastcgi_buffers 2 256k;#改为 2 256k；
        fastcgi_buffer_size 128K;# 由 64k 改为 128K；
        fastcgi_busy_buffers_size 256K;# 由 128K 改为 256K；
        fastcgi_temp_file_write_size 256K;# 由 128K 改为 256K。

        # 匹配任何请求，因为所有请求都是以"/"开始a
        # 但是更长字符匹配或者正则表达式匹配会优先匹配
        location / {
            #root   html;
            #root  /portal/pageFront/;
            #root /var/www/html;指定根目录，可以指定不是nginx目录的
            #index  /portal/pageFront/;
            #index2  index.html index.htm;
            #autoindex on;

            #段大志add start
            #反向代理的服务器地址
            #proxy_pass        http://localhost:7777/portal/pageFront/;
            #proxy_pass        http://www.baidu.com;
            #proxy_redirect off;
            #段大志add end

            proxy_pass http://my_portal_server/portal/pageFront;
            proxy_set_header Host $host:$server_port;
            #proxy_redirect true;

            #前段时间在我的网站上用nginx做了一下反向代理，最近发现不能获取客户端ip了，都是拿到的127.0.0.1的本地ip
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /portal/ {
            proxy_pass http://my_portal_server/portal/;
            # 获取客户端ip地址 Sven
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host:$server_port;
            index  /pageFront/index.html;
            # 设置上传大小Sven
            client_max_body_size 500m;
        }


        # 可以添加多个；
        # 段大志 add 通过该配置，访问nginx地址http://10.0.0.1:80/oa的请求会被转发到my_server服务地址http://10.0.0.2:8080/。
        #ngx_index 模块主要用于在文件系统目录中自动查找指定的首页文件，类似 index.html 和 index.htm 这样的，例如：
        location /oa {
            proxy_pass http://my_oa_server/oa;
            # 获取客户端ip地址 Sven
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host:$server_port;
            index /common/login.jsp;
        }



        location /safetyweb {
            root   html;
            index  /safetyweb/index.html;
        }

        location /safetyweb2 {
            root   html;
            index  /safetyweb2/index.html;
        }
        location /productionweb {
            root   html;
            index /production/index.html;
        }

        location /emergencyweb {
            root   html;
            index /emergencyweb/index.html;
        }


        location /monitorweb {
            root   html;
            index /monitorweb/index.html;
        }

        #三维漫游
        location /3droaming {
            root   html;
            index /3droaming/index.html;
        }



        location /newproduction {
            root   html;
            index /newproduction/index.html;
        }

        location /newproduction0 {
            root   html;
            index /newproduction0/index.html;
        }

        location /safety {
            proxy_pass http://my_safety_server/safety;
            # 获取客户端ip地址 Sven
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host:$server_port;
            # 设置上传大小Sven
            client_max_body_size 500m;
            # 设置下载超时时间
            proxy_send_timeout 1000s;
        }
        location /emergency {
            proxy_pass http://my_emergency_server/emergency;
            # 获取客户端ip地址 Sven
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host:$server_port;
            # 设置上传大小Sven
            client_max_body_size 500m;
             # 设置下载超时时间
            proxy_send_timeout 30;
            client_body_buffer_size 256k;
            proxy_connect_timeout 1;
            proxy_read_timeout 60;
            proxy_buffer_size 256k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;
            proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;
            proxy_max_temp_file_size 128m;
        }


        location /production {
            proxy_pass http://my_production_server/production;
            # 获取客户端ip地址 Sven
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host:$server_port;
            # 设置上传大小Sven
            client_max_body_size 500m;
        }

        location /pageOffice {
            proxy_pass http://my_jenkins_server/pageOffice;
            proxy_set_header Host $host:$server_port;
            index  /pageOffice/index2.jsp;
        }

        location /jenkins {
            proxy_pass http://my_jenkins_server/jenkins;
            proxy_set_header Host $host:$server_port;
            index  /pageOffice/index2.jsp;
        }

        location /cas {
            proxy_pass http://my_sso_cas_server/cas;
            # 获取客户端ip地址 Sven
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host:$server_port;
        }


        #jenksin本地使用302重定向


        #include /etc/nginx/conf.d/*.conf;

        #缓存工具
        #location ~ ^/Chubeiliang/.*\.(gif|jpg|png|css|js|flv|ico|swf)(.*) {
        # #proxy_pass http://shenniu.file.com;
        # proxy_pass http://my_portal_server;
        #   proxy_redirect off;
        # proxy_set_header Host $host;
        # proxy_cache cache_one;
        # proxy_cache_valid 200 302 1h;
        # proxy_cache_valid 301 1d;
        # proxy_cache_valid any 1m;
        # expires 30d;    #缓存时长,这里是30天
        #}

        #设置静态文件缓存时间30天
        #location ~ .*\.(css|js|jpg|jpeg|gif|png|ico|bmp|gz|xml|zip|rar|swf|txt|xls|xlsx|flv|mid|doc|ppt|pdf|mp3|wma)(.*) {
        #    expires    30d;
        #    access_log off;
        #expires 30d;    #缓存时长,这里是30天
        #    root D:/Server/nginx-1.10.2/html;
        #}


        # redirect server error pages to the static page /50x.html
        #
        # 只匹配"/".
        error_page   404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #include conf.d/*;
}